name: push-github-action
on: [push, pull_request]
jobs:

  build-macos:
    strategy:
      matrix:
        os:
          # NOTE: Earliest macOS supported by Crystal is macOS 10.14
          #- macos-10.14  # no longer supported by GitHub Actions
          #- macos-10.15  # no longer supported by GitHub Actions
          - macos-latest
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install dependencies with Poetry
        run: poetry install

      - name: Run non-UI tests
        run: poetry run python -m pytest

      - name: Build .app and disk image
        working-directory: "./setup"
        run: "poetry run ./make-mac.sh"

      - name: Run UI tests
        run: |
          CRYSTAL_SCREENSHOTS_DIRPATH=$GITHUB_WORKSPACE/screenshots "setup/dist/Crystal Web Archiver.app/Contents/MacOS/Crystal Web Archiver" --test

      - name: Upload screenshot if test failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: screenshots
          if-no-files-found: ignore

  build-windows:
    strategy:
      matrix:
        os:
          # NOTE: Earliest Windows supported by Crystal is Windows 7
          #- windows-2012-r2  # based on Windows 7  # no longer supported by GitHub Actions
          #- windows-2016  # based on Windows 8.1  # no longer supported by GitHub Actions
          - windows-2019  # based on Windows 10
          - windows-latest
        python-version: [3.8]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install dependencies with Poetry
        run: poetry install

      - name: Run non-UI tests
        run: poetry run python -m pytest

      - name: Display Inno Setup in Program Files
        run: |
          dir "C:\Program Files (x86)"
          dir "C:\Program Files (x86)\Inno Setup 6"

      - name: Build .exe and installer
        working-directory: ".\\setup"
        run: "poetry run .\\make-win.bat"

      - name: Run UI tests
        working-directory: ".\\setup"
        run: |
          $LOGDIR = "$HOME\AppData\Local\DaFoster\Crystal Web Archiver\Logs"
          $env:CRYSTAL_SCREENSHOTS_DIRPATH = "$env:GITHUB_WORKSPACE\screenshots"
          poetry run python run_exe.py "--argsfile=arguments.txt" "--stdoutfile=$LOGDIR\stdout.log" "--stderrfile=$LOGDIR\stderr.log" "dist\Crystal Web Archiver.exe" "---" "--test"

      - name: Upload screenshot if test failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: screenshots
          if-no-files-found: ignore
